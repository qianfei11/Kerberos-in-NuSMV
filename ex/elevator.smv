MODULE main
VAR
    cabin : 0 .. 3;
    dir : {up, down};
    request : array 0 .. 3 of boolean;
ASSIGN
    init(cabin) := 0;
    init(dir) := up;
    init(request[0]) := FALSE;
    init(request[1]) := FALSE;
    init(request[2]) := FALSE;
    init(request[3]) := FALSE;
    next(cabin) := case
        dir = up & cabin < 3 : cabin + 1;
        dir = down & cabin > 0 : cabin - 1;
        TRUE : cabin;
    esac;
    next(dir) := case
        dir = up & next(cabin) = 3 : down;
        dir = down & next(cabin) = 0 : up;
        TRUE : dir;
    esac;
    next(request[0]) := case
        next(cabin) = 0 : FALSE;
        request[0] : TRUE;
        TRUE : {FALSE, TRUE};
    esac;
    next(request[1]) := case
        next(cabin) = 1 : FALSE;
        request[1] : TRUE;
        TRUE : {FALSE, TRUE};
    esac;
    next(request[2]) := case
        next(cabin) = 2 : FALSE;
        request[2] : TRUE;
        TRUE : {FALSE, TRUE};
    esac;
    next(request[3]) := case
        next(cabin) = 3 : FALSE;
        request[3] : TRUE;
        TRUE : {FALSE, TRUE};
    esac;
SPEC AG AF(!request[0] & !request[1] & !request[2] & !request[3])
